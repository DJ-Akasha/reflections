What happens when you initialize a repository? Why do you need to do it?
	
	It adds a hidden file .git. If you don't do it then the git commands won't work. 

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	It's set apart from these as a sort of temporary folder where you can add
	stuff to it and delete stuff without creating issues of any kind. In terms of
	value that it offers I have no idea. Perhaps it gives you an extra moment to 
	think about stuff before committing.

How can you use the staging area to make sure you have one commit per logical
change?

	By adding the file to the staging area when you've created a logical step.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Branches would be useful when needing to experiment and not being sure it 
	would work. They would be useful when making slightly different apps
	for example, a paid app and a free app with ads. They could help by
	keeping things organised. Potentially help with dealing with bugs.

How do the diagrams help you visualize the branch structure?

	It's helpful as you can see it in a tree like way so you can see what's 
	going more easily rather than just having text.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	
	They become one branch but allow us to keep the commits we introduced to 
	them when they were separate which makes it easier to later find stuff.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?